name: Acceptance Tests

on:
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - 'docs/**'
      - 'examples/**'
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - 'docs/**'
      - 'examples/**'
  schedule:
    - cron: '30 21 * * *'  # Runs at 2:30pm PDT every day

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
      - uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .

  testacc:
    name: Terraform Provider Acceptance Tests
    needs: build
    timeout-minutes: 180 # 3 hours since cluster creation and cluster updates can take a while
    strategy:
      fail-fast: true
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - latest
#          - '1.7.*'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
      - uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # v3.1.1
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - name: Determine if expensive tests should run
        if: github.event_name == 'pull_request'
        run: |
         echo "CHECKING FILES FOR SKIP LOGIC..."
         SKIP_TESTS="True"
         FILES_TO_CHECK=(
           "internal/provider/schemas/deployment.go"
           "internal/provider/schemas/cluster.go"
           "internal/provider/models/deployment.go"
           "internal/provider/models/cluster.go"
           "internal/provider/resources/resource_cluster.go"
           "internal/provider/resources/resource_cluster_test.go"
           "internal/provider/resources/resource_deployment.go"
         )
         for file in "${FILES_TO_CHECK[@]}"; do
           if git diff --name-only ${{ github.base_ref }} ${{ github.head_ref }} | grep -q "$file"; then
             SKIP_TESTS="False"
             break
           fi
         done
         echo "SKIP_CLUSTER_RESOURCE_TESTS=$SKIP_TESTS" >> $GITHUB_ENV
      - env:
          TF_ACC: "1"
          HYBRID_ORGANIZATION_API_TOKEN: ${{ secrets.DEV_HYBRID_ORGANIZATION_API_TOKEN }}
          HYBRID_ORGANIZATION_ID: ckmzjm22937931d35puw3tcdo
          HOSTED_ORGANIZATION_API_TOKEN: ${{ secrets.DEV_HOSTED_ORGANIZATION_API_TOKEN }}
          HOSTED_ORGANIZATION_ID: clczfgzc3001o01kjlphpi6hv
          HYBRID_CLUSTER_ID: clnp86ly5000401ndagu20g81
          HYBRID_NODE_POOL_ID: clnp86ly5000301ndzfxz895w
          ASTRO_API_HOST: https://api.astronomer-dev.io
          SKIP_CLUSTER_RESOURCE_TESTS: ${{ env.SKIP_CLUSTER_RESOURCE_TESTS }}
          TESTARGS: "-failfast"
        run: make testacc

  daily-stage-testacc:
    name: Daily Stage Terraform Provider Acceptance Tests
    needs: build
    if: github.event.schedule
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b
      - uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8
        with:
          terraform_version: 'latest'
          terraform_wrapper: false
      - run: go mod download
      - env:
          TF_ACC: "1"
          HYBRID_ORGANIZATION_API_TOKEN: ${{ secrets.STAGE_HYBRID_ORGANIZATION_API_TOKEN }}
          HYBRID_ORGANIZATION_ID: ckon5obsu03322822nvm6yumk
          HOSTED_ORGANIZATION_API_TOKEN: ${{ secrets.STAGE_HOSTED_ORGANIZATION_API_TOKEN }}
          HOSTED_ORGANIZATION_ID: clczfo8a111cz0t140nck8ubn
          HYBRID_CLUSTER_ID: clqqongl40fmv01m96dvxh2nu
          HYBRID_NODE_POOL_ID: clqqongl40fmu01m94pwp4kct
          ASTRO_API_HOST: https://api.astronomer-stage.io
          TESTARGS: "-failfast"
        run: make testacc

  daily-prod-testacc:
    name: Daily Stage Terraform Provider Acceptance Tests
    needs: build
    if: github.event.schedule
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b
      - uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8
        with:
          terraform_version: 'latest'
          terraform_wrapper: false
      - run: go mod download
      - env:
          TF_ACC: "1"
          HYBRID_ORGANIZATION_API_TOKEN: ${{ secrets.PROD_HYBRID_ORGANIZATION_API_TOKEN }}
          HYBRID_ORGANIZATION_ID: cl9h3o0ap0qyk0ty9bxst6sdy
          HOSTED_ORGANIZATION_API_TOKEN: ${{ secrets.PROD_HOSTED_ORGANIZATION_API_TOKEN }}
          HOSTED_ORGANIZATION_ID: clczfq8dg14sz0t2udidq5syh
          HYBRID_CLUSTER_ID: clk31op94000l01jk3f3a286y
          HYBRID_NODE_POOL_ID: clk31op94000k01jkr2o3ftww
          ASTRO_API_HOST: https://api.astronomer.io
          TESTARGS: "-failfast"
        run: make testacc